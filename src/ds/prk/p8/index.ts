// Generated by fbsgen from p/ds/prk/p8

import { MultiCAS, escapeValue } from '../../../'
import { ds } from '../../'

export namespace p8 {
    export interface P881 {
        p0: number
        p1: number
        l: ds.P1
    }
    export namespace P881 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P881 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P1.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P1.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P884 {
        p0: number
        p1: number
        l: ds.P4
    }
    export namespace P884 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P884 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P4.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P4.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P888 {
        p0: number
        p1: number
        l: ds.P8
    }
    export namespace P888 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P888 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P8.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P8.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P88D {
        p0: number
        p1: number
        l: ds.PD
    }
    export namespace P88D {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P88D {
            return {
                p0: 0,
                p1: 0,
                l: ds.PD.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PD.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P88K {
        p0: number
        p1: number
        l: ds.PK
    }
    export namespace P88K {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P88K {
            return {
                p0: 0,
                p1: 0,
                l: ds.PK.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PK.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P88S {
        p0: number
        p1: number
        l: ds.PS
    }
    export namespace P88S {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P88S {
            return {
                p0: 0,
                p1: 0,
                l: ds.PS.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PS.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }



    export interface P811 {
        p0: number
        p1: number
        l: ds.P1
    }
    export namespace P811 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P811 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P1.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 8, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P1.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P814 {
        p0: number
        p1: number
        l: ds.P4
    }
    export namespace P814 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P814 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P4.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 8, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P4.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P818 {
        p0: number
        p1: number
        l: ds.P8
    }
    export namespace P818 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P818 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P8.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 8, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P8.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P81D {
        p0: number
        p1: number
        l: ds.PD
    }
    export namespace P81D {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P81D {
            return {
                p0: 0,
                p1: 0,
                l: ds.PD.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 8, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PD.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P81K {
        p0: number
        p1: number
        l: ds.PK
    }
    export namespace P81K {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P81K {
            return {
                p0: 0,
                p1: 0,
                l: ds.PK.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 8, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PK.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P81S {
        p0: number
        p1: number
        l: ds.PS
    }
    export namespace P81S {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P81S {
            return {
                p0: 0,
                p1: 0,
                l: ds.PS.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 8, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PS.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }



    export interface P841 {
        p0: number
        p1: number
        l: ds.P1
    }
    export namespace P841 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P841 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P1.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 6, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P1.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P844 {
        p0: number
        p1: number
        l: ds.P4
    }
    export namespace P844 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P844 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P4.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 6, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P4.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P848 {
        p0: number
        p1: number
        l: ds.P8
    }
    export namespace P848 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P848 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P8.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 6, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P8.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P84D {
        p0: number
        p1: number
        l: ds.PD
    }
    export namespace P84D {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P84D {
            return {
                p0: 0,
                p1: 0,
                l: ds.PD.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 6, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PD.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P84K {
        p0: number
        p1: number
        l: ds.PK
    }
    export namespace P84K {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P84K {
            return {
                p0: 0,
                p1: 0,
                l: ds.PK.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 6, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PK.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P84S {
        p0: number
        p1: number
        l: ds.PS
    }
    export namespace P84S {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P84S {
            return {
                p0: 0,
                p1: 0,
                l: ds.PS.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 6, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PS.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }



    export interface P81 {
        p0: number
        l: ds.P1
    }
    export namespace P81 {
        export const enum $f {
            p0 = 1,
            l = 2
        }
        export function $create(): P81 {
            return {
                p0: 0,
                l: ds.P1.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.P1.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P1.$descriptor},
            $: {
                p0: 1,
                l: 2
            },
            $handle: $handle
        }

    }


    export interface P84 {
        p0: number
        l: ds.P4
    }
    export namespace P84 {
        export const enum $f {
            p0 = 1,
            l = 2
        }
        export function $create(): P84 {
            return {
                p0: 0,
                l: ds.P4.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.P4.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P4.$descriptor},
            $: {
                p0: 1,
                l: 2
            },
            $handle: $handle
        }

    }


    export interface P88 {
        p0: number
        l: ds.P8
    }
    export namespace P88 {
        export const enum $f {
            p0 = 1,
            l = 2
        }
        export function $create(): P88 {
            return {
                p0: 0,
                l: ds.P8.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.P8.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P8.$descriptor},
            $: {
                p0: 1,
                l: 2
            },
            $handle: $handle
        }

    }


    export interface P8D {
        p0: number
        l: ds.PD
    }
    export namespace P8D {
        export const enum $f {
            p0 = 1,
            l = 2
        }
        export function $create(): P8D {
            return {
                p0: 0,
                l: ds.PD.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.PD.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PD.$descriptor},
            $: {
                p0: 1,
                l: 2
            },
            $handle: $handle
        }

    }


    export interface P8K {
        p0: number
        l: ds.PK
    }
    export namespace P8K {
        export const enum $f {
            p0 = 1,
            l = 2
        }
        export function $create(): P8K {
            return {
                p0: 0,
                l: ds.PK.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.PK.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PK.$descriptor},
            $: {
                p0: 1,
                l: 2
            },
            $handle: $handle
        }

    }


    export interface P8S {
        p0: number
        l: ds.PS
    }
    export namespace P8S {
        export const enum $f {
            p0 = 1,
            l = 2
        }
        export function $create(): P8S {
            return {
                p0: 0,
                l: ds.PS.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.PS.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PS.$descriptor},
            $: {
                p0: 1,
                l: 2
            },
            $handle: $handle
        }

    }



    export interface P8S1 {
        p0: number
        p1: string
        l: ds.P1
    }
    export namespace P8S1 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8S1 {
            return {
                p0: 0,
                p1: "",
                l: ds.P1.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 3, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P1.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8S4 {
        p0: number
        p1: string
        l: ds.P4
    }
    export namespace P8S4 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8S4 {
            return {
                p0: 0,
                p1: "",
                l: ds.P4.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 3, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P4.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8S8 {
        p0: number
        p1: string
        l: ds.P8
    }
    export namespace P8S8 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8S8 {
            return {
                p0: 0,
                p1: "",
                l: ds.P8.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 3, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P8.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8SD {
        p0: number
        p1: string
        l: ds.PD
    }
    export namespace P8SD {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8SD {
            return {
                p0: 0,
                p1: "",
                l: ds.PD.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 3, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PD.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8SK {
        p0: number
        p1: string
        l: ds.PK
    }
    export namespace P8SK {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8SK {
            return {
                p0: 0,
                p1: "",
                l: ds.PK.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 3, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PK.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8SS {
        p0: number
        p1: string
        l: ds.PS
    }
    export namespace P8SS {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8SS {
            return {
                p0: 0,
                p1: "",
                l: ds.PS.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 3, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PS.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }



    export interface P8D1 {
        p0: number
        p1: number
        l: ds.P1
    }
    export namespace P8D1 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8D1 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P1.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P1.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8D4 {
        p0: number
        p1: number
        l: ds.P4
    }
    export namespace P8D4 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8D4 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P4.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P4.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8D8 {
        p0: number
        p1: number
        l: ds.P8
    }
    export namespace P8D8 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8D8 {
            return {
                p0: 0,
                p1: 0,
                l: ds.P8.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P8.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8DD {
        p0: number
        p1: number
        l: ds.PD
    }
    export namespace P8DD {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8DD {
            return {
                p0: 0,
                p1: 0,
                l: ds.PD.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PD.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8DK {
        p0: number
        p1: number
        l: ds.PK
    }
    export namespace P8DK {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8DK {
            return {
                p0: 0,
                p1: 0,
                l: ds.PK.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PK.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8DS {
        p0: number
        p1: number
        l: ds.PS
    }
    export namespace P8DS {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8DS {
            return {
                p0: 0,
                p1: 0,
                l: ds.PS.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1','2'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 11, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PS.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }



    export interface P8K1 {
        p0: number
        p1: string
        l: ds.P1
    }
    export namespace P8K1 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8K1 {
            return {
                p0: 0,
                p1: "",
                l: ds.P1.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 2, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P1.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8K4 {
        p0: number
        p1: string
        l: ds.P4
    }
    export namespace P8K4 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8K4 {
            return {
                p0: 0,
                p1: "",
                l: ds.P4.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 2, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P4.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8K8 {
        p0: number
        p1: string
        l: ds.P8
    }
    export namespace P8K8 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8K8 {
            return {
                p0: 0,
                p1: "",
                l: ds.P8.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 2, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.P8.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8KD {
        p0: number
        p1: string
        l: ds.PD
    }
    export namespace P8KD {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8KD {
            return {
                p0: 0,
                p1: "",
                l: ds.PD.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 2, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PD.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8KK {
        p0: number
        p1: string
        l: ds.PK
    }
    export namespace P8KK {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8KK {
            return {
                p0: 0,
                p1: "",
                l: ds.PK.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 2, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PK.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }


    export interface P8KS {
        p0: number
        p1: string
        l: ds.PS
    }
    export namespace P8KS {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }
        export function $create(): P8KS {
            return {
                p0: 0,
                p1: "",
                l: ds.PS.$create()
            }
        }
        export function $stringify(obj: any): string {
            var buf = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }
        export function $handle(type: number, message: any): number {
            // TODO
            return 0
        }
        export const $descriptor = {
            $fdf: ['1'],
            '1': {t: 11, m: 2, a: 0, $: 'p0', $n: 'TODO name for display'},
            '2': {t: 2, m: 2, a: 0, $: 'p1', $n: 'TODO name for display'},
            '3': {t: 0, m: 2, a: 0, $: 'l', $n: 'TODO name for display', d: ds.PS.$descriptor},
            $: {
                p0: 1,
                p1: 2,
                l: 3
            },
            $handle: $handle
        }

    }




}
