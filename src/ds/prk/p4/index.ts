// Generated by fbsgen from p/ds/prk/p4

import { MultiCAS, escapeValue } from '../../../'
import { ds } from '../../'

export namespace p4 {
    /**
     * 
     * message P444441 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required uint32 p4 = 5;
     *   required ds.P1 l = 6;
     * }
     */
    export interface P444441 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        p4: number
        /** required: 6 */
        l: ds.P1
    }
    export namespace P444441 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            p4 = 5,
            l = 6
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, p4: number, l: ds.P1): P444441 {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                p4: p4,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.p4,
                _6 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5 != null)
                buf.push('"5":' + _5);
            if (_6)
                buf.push('"6":' + ds.P1.$stringify(_6));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P444444 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required uint32 p4 = 5;
     *   required ds.P4 l = 6;
     * }
     */
    export interface P444444 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        p4: number
        /** required: 6 */
        l: ds.P4
    }
    export namespace P444444 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            p4 = 5,
            l = 6
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, p4: number, l: ds.P4): P444444 {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                p4: p4,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.p4,
                _6 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5 != null)
                buf.push('"5":' + _5);
            if (_6)
                buf.push('"6":' + ds.P4.$stringify(_6));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P444448 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required uint32 p4 = 5;
     *   required ds.P8 l = 6;
     * }
     */
    export interface P444448 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        p4: number
        /** required: 6 */
        l: ds.P8
    }
    export namespace P444448 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            p4 = 5,
            l = 6
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, p4: number, l: ds.P8): P444448 {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                p4: p4,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.p4,
                _6 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5 != null)
                buf.push('"5":' + _5);
            if (_6)
                buf.push('"6":' + ds.P8.$stringify(_6));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P44444D {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required uint32 p4 = 5;
     *   required ds.PD l = 6;
     * }
     */
    export interface P44444D {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        p4: number
        /** required: 6 */
        l: ds.PD
    }
    export namespace P44444D {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            p4 = 5,
            l = 6
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, p4: number, l: ds.PD): P44444D {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                p4: p4,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.p4,
                _6 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5 != null)
                buf.push('"5":' + _5);
            if (_6)
                buf.push('"6":' + ds.PD.$stringify(_6));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P44444K {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required uint32 p4 = 5;
     *   required ds.PK l = 6;
     * }
     */
    export interface P44444K {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        p4: number
        /** required: 6 */
        l: ds.PK
    }
    export namespace P44444K {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            p4 = 5,
            l = 6
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, p4: number, l: ds.PK): P44444K {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                p4: p4,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.p4,
                _6 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5 != null)
                buf.push('"5":' + _5);
            if (_6)
                buf.push('"6":' + ds.PK.$stringify(_6));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P44444S {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required uint32 p4 = 5;
     *   required ds.PS l = 6;
     * }
     */
    export interface P44444S {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        p4: number
        /** required: 6 */
        l: ds.PS
    }
    export namespace P44444S {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            p4 = 5,
            l = 6
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, p4: number, l: ds.PS): P44444S {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                p4: p4,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.p4,
                _6 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5 != null)
                buf.push('"5":' + _5);
            if (_6)
                buf.push('"6":' + ds.PS.$stringify(_6));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }



    /**
     * 
     * message P44441 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required ds.P1 l = 5;
     * }
     */
    export interface P44441 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        l: ds.P1
    }
    export namespace P44441 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            l = 5
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, l: ds.P1): P44441 {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5)
                buf.push('"5":' + ds.P1.$stringify(_5));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P44444 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required ds.P4 l = 5;
     * }
     */
    export interface P44444 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        l: ds.P4
    }
    export namespace P44444 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            l = 5
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, l: ds.P4): P44444 {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5)
                buf.push('"5":' + ds.P4.$stringify(_5));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P44448 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required ds.P8 l = 5;
     * }
     */
    export interface P44448 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        l: ds.P8
    }
    export namespace P44448 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            l = 5
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, l: ds.P8): P44448 {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5)
                buf.push('"5":' + ds.P8.$stringify(_5));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4444D {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required ds.PD l = 5;
     * }
     */
    export interface P4444D {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        l: ds.PD
    }
    export namespace P4444D {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            l = 5
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, l: ds.PD): P4444D {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5)
                buf.push('"5":' + ds.PD.$stringify(_5));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4444K {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required ds.PK l = 5;
     * }
     */
    export interface P4444K {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        l: ds.PK
    }
    export namespace P4444K {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            l = 5
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, l: ds.PK): P4444K {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5)
                buf.push('"5":' + ds.PK.$stringify(_5));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4444S {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required uint32 p3 = 4;
     *   required ds.PS l = 5;
     * }
     */
    export interface P4444S {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        p3: number
        /** required: 5 */
        l: ds.PS
    }
    export namespace P4444S {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            p3 = 4,
            l = 5
        }

        export function $create(p0: number, p1: number, p2: number, p3: number, l: ds.PS): P4444S {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                p3: p3,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.p3,
                _5 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4 != null)
                buf.push('"4":' + _4);
            if (_5)
                buf.push('"5":' + ds.PS.$stringify(_5));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }



    /**
     * 
     * message P4441 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required ds.P1 l = 4;
     * }
     */
    export interface P4441 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        l: ds.P1
    }
    export namespace P4441 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            l = 4
        }

        export function $create(p0: number, p1: number, p2: number, l: ds.P1): P4441 {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4)
                buf.push('"4":' + ds.P1.$stringify(_4));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4444 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required ds.P4 l = 4;
     * }
     */
    export interface P4444 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        l: ds.P4
    }
    export namespace P4444 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            l = 4
        }

        export function $create(p0: number, p1: number, p2: number, l: ds.P4): P4444 {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4)
                buf.push('"4":' + ds.P4.$stringify(_4));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4448 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required ds.P8 l = 4;
     * }
     */
    export interface P4448 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        l: ds.P8
    }
    export namespace P4448 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            l = 4
        }

        export function $create(p0: number, p1: number, p2: number, l: ds.P8): P4448 {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4)
                buf.push('"4":' + ds.P8.$stringify(_4));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P444D {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required ds.PD l = 4;
     * }
     */
    export interface P444D {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        l: ds.PD
    }
    export namespace P444D {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            l = 4
        }

        export function $create(p0: number, p1: number, p2: number, l: ds.PD): P444D {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4)
                buf.push('"4":' + ds.PD.$stringify(_4));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P444K {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required ds.PK l = 4;
     * }
     */
    export interface P444K {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        l: ds.PK
    }
    export namespace P444K {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            l = 4
        }

        export function $create(p0: number, p1: number, p2: number, l: ds.PK): P444K {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4)
                buf.push('"4":' + ds.PK.$stringify(_4));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P444S {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required uint32 p2 = 3;
     *   required ds.PS l = 4;
     * }
     */
    export interface P444S {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        p2: number
        /** required: 4 */
        l: ds.PS
    }
    export namespace P444S {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            p2 = 3,
            l = 4
        }

        export function $create(p0: number, p1: number, p2: number, l: ds.PS): P444S {
            return {
                p0: p0,
                p1: p1,
                p2: p2,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.p2,
                _4 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3 != null)
                buf.push('"3":' + _3);
            if (_4)
                buf.push('"4":' + ds.PS.$stringify(_4));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }



    /**
     * 
     * message P411 {
     *   required uint32 p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.P1 l = 3;
     * }
     */
    export interface P411 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P1
    }
    export namespace P411 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P1): P411 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P414 {
     *   required uint32 p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.P4 l = 3;
     * }
     */
    export interface P414 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P4
    }
    export namespace P414 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P4): P414 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P418 {
     *   required uint32 p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.P8 l = 3;
     * }
     */
    export interface P418 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P8
    }
    export namespace P418 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P8): P418 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P41D {
     *   required uint32 p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.PD l = 3;
     * }
     */
    export interface P41D {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PD
    }
    export namespace P41D {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PD): P41D {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P41K {
     *   required uint32 p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.PK l = 3;
     * }
     */
    export interface P41K {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PK
    }
    export namespace P41K {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PK): P41K {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P41S {
     *   required uint32 p0 = 1;
     *   required int8 p1 = 2;
     *   required ds.PS l = 3;
     * }
     */
    export interface P41S {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PS
    }
    export namespace P41S {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PS): P41S {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }



    /**
     * 
     * message P481 {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P1 l = 3;
     * }
     */
    export interface P481 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P1
    }
    export namespace P481 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P1): P481 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P484 {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P4 l = 3;
     * }
     */
    export interface P484 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P4
    }
    export namespace P484 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P4): P484 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P488 {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P8 l = 3;
     * }
     */
    export interface P488 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P8
    }
    export namespace P488 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P8): P488 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P48D {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PD l = 3;
     * }
     */
    export interface P48D {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PD
    }
    export namespace P48D {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PD): P48D {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P48K {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PK l = 3;
     * }
     */
    export interface P48K {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PK
    }
    export namespace P48K {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PK): P48K {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P48S {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PS l = 3;
     * }
     */
    export interface P48S {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PS
    }
    export namespace P48S {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PS): P48S {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }



    /**
     * 
     * message P4D1 {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P1 l = 3;
     * }
     */
    export interface P4D1 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P1
    }
    export namespace P4D1 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P1): P4D1 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4D4 {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P4 l = 3;
     * }
     */
    export interface P4D4 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P4
    }
    export namespace P4D4 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P4): P4D4 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4D8 {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.P8 l = 3;
     * }
     */
    export interface P4D8 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P8
    }
    export namespace P4D8 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P8): P4D8 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4DD {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PD l = 3;
     * }
     */
    export interface P4DD {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PD
    }
    export namespace P4DD {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PD): P4DD {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4DK {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PK l = 3;
     * }
     */
    export interface P4DK {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PK
    }
    export namespace P4DK {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PK): P4DK {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4DS {
     *   required uint32 p0 = 1;
     *   required uint64 p1 = 2;
     *   required ds.PS l = 3;
     * }
     */
    export interface P4DS {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PS
    }
    export namespace P4DS {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PS): P4DS {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }



    /**
     * 
     * message P4K1 {
     *   required uint32 p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.P1 l = 3;
     * }
     */
    export interface P4K1 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.P1
    }
    export namespace P4K1 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.P1): P4K1 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4K4 {
     *   required uint32 p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.P4 l = 3;
     * }
     */
    export interface P4K4 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.P4
    }
    export namespace P4K4 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.P4): P4K4 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4K8 {
     *   required uint32 p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.P8 l = 3;
     * }
     */
    export interface P4K8 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.P8
    }
    export namespace P4K8 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.P8): P4K8 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4KD {
     *   required uint32 p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.PD l = 3;
     * }
     */
    export interface P4KD {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.PD
    }
    export namespace P4KD {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.PD): P4KD {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4KK {
     *   required uint32 p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.PK l = 3;
     * }
     */
    export interface P4KK {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.PK
    }
    export namespace P4KK {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.PK): P4KK {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4KS {
     *   required uint32 p0 = 1;
     *   required bytes p1 = 2;
     *   required ds.PS l = 3;
     * }
     */
    export interface P4KS {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.PS
    }
    export namespace P4KS {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.PS): P4KS {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }



    /**
     * 
     * message P441 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.P1 l = 3;
     * }
     */
    export interface P441 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P1
    }
    export namespace P441 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P1): P441 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P444 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.P4 l = 3;
     * }
     */
    export interface P444 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P4
    }
    export namespace P444 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P4): P444 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P448 {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.P8 l = 3;
     * }
     */
    export interface P448 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.P8
    }
    export namespace P448 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.P8): P448 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P44D {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.PD l = 3;
     * }
     */
    export interface P44D {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PD
    }
    export namespace P44D {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PD): P44D {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P44K {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.PK l = 3;
     * }
     */
    export interface P44K {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PK
    }
    export namespace P44K {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PK): P44K {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P44S {
     *   required uint32 p0 = 1;
     *   required uint32 p1 = 2;
     *   required ds.PS l = 3;
     * }
     */
    export interface P44S {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: number
        /** required: 3 */
        l: ds.PS
    }
    export namespace P44S {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: number, l: ds.PS): P44S {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2 != null)
                buf.push('"2":' + _2);
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }



    /**
     * 
     * message P4S1 {
     *   required uint32 p0 = 1;
     *   required string p1 = 2;
     *   required ds.P1 l = 3;
     * }
     */
    export interface P4S1 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.P1
    }
    export namespace P4S1 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.P1): P4S1 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P1.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4S4 {
     *   required uint32 p0 = 1;
     *   required string p1 = 2;
     *   required ds.P4 l = 3;
     * }
     */
    export interface P4S4 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.P4
    }
    export namespace P4S4 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.P4): P4S4 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P4.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4S8 {
     *   required uint32 p0 = 1;
     *   required string p1 = 2;
     *   required ds.P8 l = 3;
     * }
     */
    export interface P4S8 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.P8
    }
    export namespace P4S8 {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.P8): P4S8 {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.P8.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4SD {
     *   required uint32 p0 = 1;
     *   required string p1 = 2;
     *   required ds.PD l = 3;
     * }
     */
    export interface P4SD {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.PD
    }
    export namespace P4SD {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.PD): P4SD {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PD.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4SK {
     *   required uint32 p0 = 1;
     *   required string p1 = 2;
     *   required ds.PK l = 3;
     * }
     */
    export interface P4SK {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.PK
    }
    export namespace P4SK {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.PK): P4SK {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PK.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4SS {
     *   required uint32 p0 = 1;
     *   required string p1 = 2;
     *   required ds.PS l = 3;
     * }
     */
    export interface P4SS {
        /** required: 1 */
        p0: number
        /** required: 2 */
        p1: string
        /** required: 3 */
        l: ds.PS
    }
    export namespace P4SS {
        export const enum $f {
            p0 = 1,
            p1 = 2,
            l = 3
        }

        export function $create(p0: number, p1: string, l: ds.PS): P4SS {
            return {
                p0: p0,
                p1: p1,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.p1,
                _3 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":"' + _2 + '"');
            if (_3)
                buf.push('"3":' + ds.PS.$stringify(_3));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }



    /**
     * 
     * message P41 {
     *   required uint32 p0 = 1;
     *   required ds.P1 l = 2;
     * }
     */
    export interface P41 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        l: ds.P1
    }
    export namespace P41 {
        export const enum $f {
            p0 = 1,
            l = 2
        }

        export function $create(p0: number, l: ds.P1): P41 {
            return {
                p0: p0,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.P1.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P44 {
     *   required uint32 p0 = 1;
     *   required ds.P4 l = 2;
     * }
     */
    export interface P44 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        l: ds.P4
    }
    export namespace P44 {
        export const enum $f {
            p0 = 1,
            l = 2
        }

        export function $create(p0: number, l: ds.P4): P44 {
            return {
                p0: p0,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.P4.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P48 {
     *   required uint32 p0 = 1;
     *   required ds.P8 l = 2;
     * }
     */
    export interface P48 {
        /** required: 1 */
        p0: number
        /** required: 2 */
        l: ds.P8
    }
    export namespace P48 {
        export const enum $f {
            p0 = 1,
            l = 2
        }

        export function $create(p0: number, l: ds.P8): P48 {
            return {
                p0: p0,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.P8.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4D {
     *   required uint32 p0 = 1;
     *   required ds.PD l = 2;
     * }
     */
    export interface P4D {
        /** required: 1 */
        p0: number
        /** required: 2 */
        l: ds.PD
    }
    export namespace P4D {
        export const enum $f {
            p0 = 1,
            l = 2
        }

        export function $create(p0: number, l: ds.PD): P4D {
            return {
                p0: p0,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.PD.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4K {
     *   required uint32 p0 = 1;
     *   required ds.PK l = 2;
     * }
     */
    export interface P4K {
        /** required: 1 */
        p0: number
        /** required: 2 */
        l: ds.PK
    }
    export namespace P4K {
        export const enum $f {
            p0 = 1,
            l = 2
        }

        export function $create(p0: number, l: ds.PK): P4K {
            return {
                p0: p0,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.PK.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }


    /**
     * 
     * message P4S {
     *   required uint32 p0 = 1;
     *   required ds.PS l = 2;
     * }
     */
    export interface P4S {
        /** required: 1 */
        p0: number
        /** required: 2 */
        l: ds.PS
    }
    export namespace P4S {
        export const enum $f {
            p0 = 1,
            l = 2
        }

        export function $create(p0: number, l: ds.PS): P4S {
            return {
                p0: p0,
                l: l
            }
        }
        export function $stringify(obj: any): string {
            var buf: string[] = [],
                _1 = obj.p0,
                _2 = obj.l;

            if (_1 != null)
                buf.push('"1":' + _1);
            if (_2)
                buf.push('"2":' + ds.PS.$stringify(_2));


            return 0 === buf.length ? '{}' : '{' + buf.join(',') + '}';
        }

    }




}
